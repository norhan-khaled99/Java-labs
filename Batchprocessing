import java.sql.*;

public class BatchProcessingExample {
    
    public static void main(String[] args) {
        Connection conn = null;
        PreparedStatement pstmt = null;
        try {
            
            String sqlInsert = "INSERT INTO employees (id, name, salary) VALUES (?, ?, ?)";
            String sqlUpdate = "UPDATE employees SET salary = ? WHERE id = ?";
            
            conn = DriverManager.getConnection("jdbc:mysql://localhost/employee", "root", "123456");
            pstmt = conn.prepareStatement(sqlInsert);
            
            conn.setAutoCommit(false);
            
            pstmt.setInt(1, 1001);
            pstmt.setString(2, "John Smith");
            pstmt.setDouble(3, 50000.00);
            pstmt.addBatch();
            
            pstmt.setInt(1, 1002);
            pstmt.setString(2, "Jane Doe");
            pstmt.setDouble(3, 60000.00);
            pstmt.addBatch();
            
            pstmt = conn.prepareStatement(sqlUpdate);
            
            pstmt.setDouble(1, 55000.00);
            pstmt.setInt(2, 1001);
            pstmt.addBatch();
            
            pstmt.setDouble(1, 65000.00);
            pstmt.setInt(2, 1002);
            pstmt.addBatch();
            
            int[] updateCounts = pstmt.executeBatch();
            System.out.println("Update counts: " + Arrays.toString(updateCounts));
            
            conn.commit();
        } catch (SQLException e) {
            try {
                if (conn != null) {
                    conn.rollback();
                }
            } catch (SQLException e1) {
                e1.printStackTrace();
            }
            e.printStackTrace();
        } finally {
            try {
                if (pstmt != null) {
                    pstmt.close();
                }
                if (conn != null) {
                    conn.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }
}
